/*
 * ReactBucket Framwork
 *
 * Checkbox @ _checkbox.scss in 'Form'
 *
 * Defined at 2019-11-09
 * Copyright Marco Cavanna â€¢ 2019
 */


/******
    Set the default appareance
    of the input field into
    the container
******/
.checkbox {
  input[type="checkbox"],
  input[type="radio"] {
    cursor: pointer;
    @include visually-hidden
  }
}


/******
    Draw the Box
******/
.checkbox > label {
  cursor: pointer;
  position: relative;
  display: block;
  padding-left: $checkbox-label-distance;
  outline: none;

  /* Box */
  &:before {
    position: absolute;
    content: '';
    top: 50%;
    left: 0;
    transform: translateY(-50%);
    height: $checkbox-box-size;
    width: $checkbox-box-size;
    border-radius: $border-radius;
    box-shadow: 0px 0px 0px 1px rgba(0, 0, 0, .1);
    background-color: $white;
    transition:
      background-color $transition-duration $transition-ease;
  }

  /* Checkmark */
  &:after {
    @include fontAwesomeFamilySolid;
    content: fa-content($fa-var-check);
    position: absolute;
    top: 50%;
    left: $checkbox-box-size / 2 + .1em;
    transform: translate(-55%, -46%);
    color: $primary;
    opacity: 0;
    transition:
      color $transition-ease $transition-duration;
  }
}


/******
    Label
******/
.checkbox > label {
  vertical-align: middle;
}


/******
    Check State
******/

/*---
  Hover Style
---*/
.checkbox.is-simple:not(.is-checked):not(.is-disabled) > label {
  @include without-touch-hover {
    &:before {
      box-shadow: 0px 0px 0px 1px $primary;
    }

    &:after {
      opacity: .5;
    }
  }
}

.checkbox.is-simple.is-checked:not(.is-disabled):not(.is-radio) > label {
  @include without-touch-hover {
    &:before {
      background-color: transparentize($primary, .25);
    }
  }
}

/*---
  Focus
---*/
.checkbox.is-simple > input:focus {
  &:focus {
    &:before {
      box-shadow: 0px 0px 0px 1px $primary;
    }

    &:after {
      opacity: .5;
    }
  }
}

/*---
  Active Style
---*/
.checkbox.is-simple > input:checked ~ label,
.checkbox.is-simple > input:indeterminate:not([type="radio"]) ~ label {
  &:before {
    box-shadow: 0px 0px 0px 1px $primary;
    background-color: $primary;
  }

  &:after {
    color: $white;
    opacity: 1;
  }
}

/*---
  Indeterminate Style
---*/
.checkbox.is-simple > input:indeterminate:not([type="radio"]) ~ label {
  &:after {
    content: fa-content($fa-var-minus);
    transform: translate(-56%, -46%);
  }
}

/*---
  ReadOnly
---*/
.checkbox.is-readonly {
  pointer-events: none;

  > label {
    cursor: default;
  }
}

/*---
  Disabled Style
---*/
.checkbox.is-disabled {
  opacity: $disabled-opacity;

  > label {
    cursor: default !important;
  }
}


/******
    Different Checkbox Types
******/

/*---
  Radio
---*/
.checkbox.is-radio > label {

  /* Box */
  &:before {
    height: $radio-box-size;
    width: $radio-box-size;
    border-radius: $radio-box-size;
  }

  /* Checkmark */
  &:after {
    content: '';
    height: $radio-box-size;
    width: $radio-box-size;
    border-radius: $radio-box-size;
    font-size: .6em;
    background-color: $primary;
    transform: translate(-22%, -50%);
  }
}

.checkbox.is-radio > input:checked ~ label {
  &:before {
    background-color: $white;
  }
}


/*---
  Slider and Toggle
  Shared Style
---*/
.checkbox.is-slider > label,
.checkbox.is-toggle > label {
  padding-left: $slider-label-distance;

  /* Rail */
  &:before {
    content: '';
    height: .5em;
    width: $slider-travel-distance - $slider-bullet-size;
    left: $slider-bullet-size / 2;
    background-color: $grey-lightest;
    border-radius: .25em;
    box-shadow: none !important;
    opacity: 1;
    transition:
      background-color $transition-duration $transition-ease,
      border-color $transition-duration $transition-ease;
  }

  /* Bullet */
  &:after {
    content: '';
    height: $slider-bullet-size;
    width: $slider-bullet-size;
    border-radius: $slider-bullet-size;
    background-color: $white;
    box-shadow: 0px 0px 0px 1px rgba(0, 0, 0, .1);
    opacity: 1;
    left: 0;
    right: auto;
    transform: translateY(-50%);
    transition:
      all $transition-duration $transition-ease
  }
}

/*---
  Adkust Sizing and Style
  for Toggle
---*/
.checkbox.is-toggle > label {
  /* Rail */
  &:before {
    height: $toggle-bullet-size;
    width: calc(#{$slider-travel-distance} + 4px);
    left: -1px;
    border-radius: calc(#{$toggle-bullet-size / 2} + 2px);
    border: solid 1px $grey-lightest;
  }

  /* Bulleet */
  &:after {
    height: $toggle-bullet-size;
    width: $toggle-bullet-size;
    border-radius: $toggle-bullet-size;
    box-shadow: none !important;
  }
}

/*---
  Hover Style
---*/
.checkbox.is-slider:not(.is-checked) > label,
.checkbox.is-toggle:not(.is-checked) > label {
  @include without-touch-hover {
    &:before {
      background-color: transparentize($primary, .6);
      border-color: transparentize($primary, .6);
    }
  }
}

/*---
  Active Style
---*/
.checkbox.is-slider > input:checked ~ label {
  &:before {
    background-color: transparentize($primary, .6);
    border-color: transparentize($primary, .6);
  }

  &:after {
    left: $slider-travel-distance - $slider-bullet-size;
    background-color: $primary;
    box-shadow: 0px 0px 0px 1px $primary;
  }
}

.checkbox.is-toggle > input:checked ~ label,
.checkbox.is-toggle.is-checked > label {
  &:before {
    background-color: $primary;
    border-color: $primary;
  }

  &:after {
    left: $slider-travel-distance - $slider-bullet-size;
  }
}
