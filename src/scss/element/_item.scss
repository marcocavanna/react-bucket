/*
 * ReactBucket Framwork
 *
 * Item @ _item.scss in 'Element'
 *
 * Defined at 2019-11-30
 * Copyright Marco Cavanna â€¢ 2019
 */



/******
    Local MIXIN
******/
@mixin __item-active-variation($background, $color) {
  background-color: $background !important;

  .item-avatar {
    box-shadow: none !important;
    background-image: none !important;
    background-color: transparentize($color, .5) !important;
    color: $background !important;
  }

  .item-content {
    .header {
      color: transparentize($color, .1) !important;
    }

    .item-text {
      color: transparentize($color, .3) !important;
    }
  }

  @include without-touch-hover {
    background-color: transparentize($background, .15) !important;
  }
}

/*==========
    Items Container
==========*/
.items {
  display: block;

  > .item {
    margin-bottom: get-em-spacer(4);
    border-bottom: solid 1px transparent;

    &.is-clickable {
      margin-bottom: 0;
    }

    &:last-child {
      margin-bottom: 0 !important;
    }
  }

  &.items-are-clickable {
    margin-left: -.75em;
    margin-right: -.75em;
  }

  &.are-divided {
    > .item {
      &:not(.is-clickable) {
        margin-bottom: get-em-spacer(2);
        padding-bottom: get-em-spacer(2);

        &:last-child {
          padding-bottom: 0;
          margin-bottom: 0;
        }
      }

      border-bottom: $border;

      &:last-child {
        border-bottom: none;
      }

      &.is-clickable {
        border-radius: 0;

        &:first-child {
          border-top-left-radius: pixel-to-em($border-radius);
          border-top-right-radius: pixel-to-em($border-radius);
        }

        &:last-child {
          border-bottom-left-radius: pixel-to-em($border-radius);
          border-bottom-right-radius: pixel-to-em($border-radius);
        }
      }
    }
  }

  &.are-relaxed {
    > .item {
      margin-bottom: get-em-spacer(5);
    }

    &.are-divided {
      > .item {
        margin-bottom: get-em-spacer(4);
        padding-bottom: get-em-spacer(4);
      }
    }
  }
}

/******
    Items Section
******/
.items {

  /*---
    Style Section as Label for Panel
    @see _panel.scss
  ---*/
  > .section {
    display: block;
    font-weight: $panel-section-label-font-weight;
    color: $panel-section-label-color;
    text-transform: $panel-section-label-text-transform;
    margin-bottom: $panel-section-label-margin-bottom;
    font-size: $panel-section-label-font-size;
  }

  /*---
    Section on Not First Items
    list has a margin top to
    divide sections
  ---*/
  + .items > .section {
    margin-top: 1.5em;
  }

  /*---
    Divided items list
    must append border bottom to section
  ---*/
  &.are-divided > .section {
    border-bottom: solid 2px $white-shade-2;
    margin-bottom: .75em;
    padding-bottom: .75em;
  }
}

/*==========
    Item Element
==========*/
.item {
  display: flex;
  align-items: center;
  width: 100%;
  background-color: $item-base-background;

  &.is-sortable {
    @include unselectable();

    &.is-clickable {
      background-color: $white !important;
    }
  }

  &:not(.is-sortable) {
    transition: background-color $transition-duration $transition-ease;
  }

  &.is-disabled {
    opacity: $disabled-opacity;
  }

  &.is-clickable {
    padding: .75em;
    border-radius: pixel-to-em($border-radius);

    &:not(.is-disabled) {
      cursor: pointer;

      @include without-touch-hover {
        background-color: $item-clickable-hover-background;
      }
    }

    &.is-active,
    &.is-active-as-primary {
      @include __item-active-variation($primary, $white);
    }

    &.is-active-as-secondary {
      @include __item-active-variation($secondary, $white);
    }

    &.is-active-as-danger {
      @include __item-active-variation($danger, $white);
    }

    &.is-active-as-success {
      @include __item-active-variation($success, $white);
    }

    &.is-active-as-warning {
      @include __item-active-variation($warning, $white);
    }

  }

  @include size-variation();

}

/*==========
    Item Avatar
==========*/
.item-avatar-wrapper {

  // Increase spacing from content
  + .item-content {
    margin-left: get-em-spacer(3);
  }

  // Generate notifications badge
  &.has-notification-badge {
    position: relative;

    .notification-badge {
      color: $white;
      font-weight: $bold;
      position: absolute;
      padding: pixel-to-em($item-notification-badge-min-size / 2);
      border-radius: pixel-to-em($item-notification-badge-min-size);
      background-color: $danger;
      top: 0;
      right: 0;
    }

    &.badge-has-content {
      .notification-badge {
        line-height: 1.5;
        height: 1.4em;
        padding-top: 0;
        padding-bottom: 0;
        border-radius: .7em;
        transform: translate(25%, -25%);
      }
    }
  }
}

.item-avatar {
  display: block;
  flex: 0 0 $item-avatar-base-size;
  align-self: center;
  height: $item-avatar-base-size;
  width: $item-avatar-base-size;
  line-height: $item-avatar-base-size;
  border-radius: $item-avatar-border-radius;
  text-align: center;
  box-shadow: $item-avatar-inner-shadow;
  background-color: $item-avatar-background-color;
  overflow: hidden;
  will-change: background-color;
  transition: background-color $transition-ease $transition-duration;

  &.has-generated-background {
    box-shadow: inset 0 0 2px 0px rgba(0, 0, 0, .5);
  }

  &.is-square {
    border-radius: $border-radius;

    > .content .icon {
      font-size: 1.25em;
    }
  }

  &.is-flexible {
    min-width: $item-avatar-base-size;
    width: auto;
    flex: initial;
    padding: 0 .5em;
  }

  > .content {
    text-align: inherit;
    font-weight: $bold;

    @include icon-style {
      margin: 0;
    }
  }

  &.is-centered {
    margin: 0 auto;
  }

  &.is-disabled {
    cursor: default !important;
    opacity: $disabled-opacity;
  }

  &.has-image {
    background-color: transparent !important;

    > .content {
      height: 100%;

      > div {
        height: 100%;
        width: 100%;
        background-size: cover;
      }
    }
  }

  @include size-variation;

  @include background-variation(
    $brand: true,
    $ui: true,
    $social: true
  );
}

/*==========
    Item Content Element
==========*/
.item-content {
  display: block;
  flex: 1 1 auto;
  overflow: hidden;

  .header {
    font-size: 1em;
    font-weight: $item-header-header-font-weight;
    color: inherit;
    margin: 0;
    padding: 0;
    @include truncate-text();
  }

  .item-text {
    color: inherit;
    opacity: $item-text-content-opacity;
    font-size: $item-text-content-font-size;
    @include truncate-text();
  }

  &.is-not-truncated {
    overflow: visible;

    .item-text {
      overflow: visible;
      white-space: pre-wrap;
      text-overflow: none;
    }
  }
}

/******
    Item Meta Content
******/
.item.has-meta {

  /*---
    Fix Header and Tools position
    aligning them to the top of the Item
  ---*/
  .item-avatar,
  .item-tools {
    align-self: flex-start;
  }

  /*---
    Divide the Meta to the rest of
    the Item Content, using padding and a border
  ---*/
  .header + .item-meta,
  .item-text + .item-meta {
    padding-top: 1em;

    &.is-divided {
      padding-top: .75em;
      margin-top: .75em;
      border-top: $border-light;
    }
  }

}

/*==========
    Item Tools
==========*/
.item-tools {
  margin-left: auto;
  padding-left: get-em-spacer(3);
  display: flex;
  flex: 0 0 auto;
  align-self: center;

  + .item-tools {
    margin-left: 0;
  }

  > .item-tool {
    padding: 0;
    margin-right: get-em-spacer(2);

    &:last-child {
      margin-right: 0;
    }
  }
}

/******
    Fixed Text Right Container
******/
.has-text-right > .item {
  flex-direction: row-reverse;

  .item-avatar + .item-content {
    margin-left: 0;
    margin-right: .5em;
  }
}
