@mixin background-variation($brand: true, $ui: false, $social: false, $with-hover: false, $with-focus: false, $with-active: false, $property-variation: background-color) {

  $__colors-variations: ();

  @if $brand == true {
    $__colors-variations: map-merge($__colors-variations, $ui-bucket-brand-colors-map);
  }

  @if $ui == true {
    $__colors-variations: map-merge($__colors-variations, $ui-bucket-ui-colors-map);
  }

  @if $social == true {
    $__colors-variations: map-merge($__colors-variations, $ui-bucket-socials-color-map);
  }

  @each $label, $color in $__colors-variations {
    &.is-#{$label} {
      #{$property-variation}: $color;

      @if $property-variation == background-color {
        color: choose-contrast-color($color, $white-shade, $text);
      } @else {
        color: $color;
      }

      &:not([disabled]) {
        @if $with-hover == 'shadow' {
          box-shadow: none;
          transition: all linear .1s;
          will-change: box-shadow;
  
          @include without-touch-hover {
            #{$property-variation}: color-tint($color, .5);
            box-shadow: 0px 1px 10px transparentize(color-shade($color), .4);
          }
        } @else if $with-hover == true {
          transition: $property-variation linear .1s;
          will-change: $property-variation;

          @include without-touch-hover {
            #{$property-variation}: color-shade($color, .75);
          }
        }
    
        @if $with-focus == true {
          &:focus, &.is-focused {
            box-shadow: 0px 0px 1px 2px color-shade($color, 1.5) inset !important;
            #{$property-variation}: color-tint($color, .75) !important;
          }
        }
    
        @if $with-active == true {
          &:active, &.is-active {
            #{$property-variation}: color-shade($color, 1.25) !important;
          }
        }
      }
    }
  }
}

@mixin interactive-element-background-variation(
  $base-color,
  $brand: true,
  $ui: false,
  $social: false,
  $hover-will-drop-shadow: false,
  $with-active: true,
  $with-focus: true,
  $property-variation: background-color,
  $active-color: null,
  $focus-color: null
) {
  
  $__color-for-contrast: $base-color;

  @if $base-color == transparent {
    $__color-for-contrast: $white-shade;
  }

  @if $active-color == null {
    $active-color: color-shade($__color-for-contrast, .75);
  }

  @if $focus-color == null {
    $focus-color: color-tint($__color-for-contrast, .75);
  }

  @if $base-color != null and $base-color != false {
    #{$property-variation}: $base-color;

    @if $property-variation == background-color {
      color: choose-contrast-color($__color-for-contrast, $white-shade, $text);
    }

    cursor: pointer;

    &[disabled],
    &:disabled {
      cursor: not-allowed !important;
      opacity: .5 !important;
    }

    &:not([disabled]) {
      @if $hover-will-drop-shadow == true {
        box-shadow: none;
        transition: all linear .1s;
        will-change: box-shadow;
      } @else {
        transition: $property-variation linear .1s;
        will-change: $property-variation;
      }
  
      @include without-touch-hover {
        @if $hover-will-drop-shadow == true {
          #{$property-variation}: color-tint($__color-for-contrast, .5);
          box-shadow: 0px 1px 10px transparentize(color-shade($__color-for-contrast), .4);
        } @else {
          #{$property-variation}: $active-color;
        }
      }
  
      @if $with-active == true {
        &:active, &.is-active {
          #{$property-variation}: color-shade($active-color, .25) !important;
        }
      }
  
      @if $with-focus == true {
        &:focus, &.is-focused {
          box-shadow: 0px 0px 1px 2px color-shade($__color-for-contrast, 1.5) inset !important;
          #{$property-variation}: $focus-color !important;
        }
      }
    }
  }

  @if $ui == true or $brand == true or $social == true {
    $__hover_mode: true;
  
    @if $hover-will-drop-shadow == true {
      $__hover_mode: 'shadow';
    }
  
    @include background-variation(
      $brand: $brand,
      $ui: $ui,
      $social: $social,
      $with-hover: $__hover_mode,
      $with-focus: $with-focus,
      $with-active: $with-active,
      $property-variation: $property-variation
    );
  }

}