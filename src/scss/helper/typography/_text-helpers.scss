@if $generate-text-size-utility-class == true {
  @each $label, $size in $font-size-map {
    @include property-for-each-breakpoint('has-text-#{$label}', $attach-to-selector: false, $property-with-breakpoint: $generate-responsive-text-size-utility-class, $compound-min-max-screen: true) {
      font-size: $size !important;
    }
  }
}

@if $generate-font-weight-utility-class == true {
  @each $label, $weight in $font-weight-map {
    @include property-for-each-breakpoint('has-font-#{$label}', $attach-to-selector: false, $property-with-breakpoint: $generate-responsive-font-weight-utility-class, $compound-min-max-screen: true) {
      font-weight: $weight !important;
    }
  }
}

@if $generate-text-property-utility-class == true {
  @each $property, $list in $text-property-map {
    @each $value in $list {
      @include property-for-each-breakpoint('has-text-#{$value}', $attach-to-selector: false, $property-with-breakpoint: $generate-responsive-text-property-utility-class, $compound-min-max-screen: true) {
        text-#{$property}: $value !important;
      }
    }
  }
}

@if $generate-text-brand-colors == true {
  @each $label, $color in $react-bucket-brand-colors-map {
    @include property-for-each-breakpoint('has-text-#{$label}', $attach-to-selector: false, $property-with-breakpoint: $generate-responsive-text-brand-colors, $compound-min-max-screen: true) {
      color: $color !important;
    }
  }
}

@if $generate-text-ui-colors == true {
  @each $label, $color in $react-bucket-ui-colors-map {
    @include property-for-each-breakpoint('has-text-#{$label}', $attach-to-selector: false, $property-with-breakpoint: $generate-responsive-text-ui-colors, $compound-min-max-screen: true) {
      color: $color !important;
    }
  }
}

@if $generate-text-socials-colors == true {
  @each $label, $color in $react-bucket-socials-color-map {
    @include property-for-each-breakpoint('has-text-#{$label}', $attach-to-selector: false, $property-with-breakpoint: $generate-responsive-text-socials-colors, $compound-min-max-screen: true) {
      color: $color !important;
    }
  }
}
