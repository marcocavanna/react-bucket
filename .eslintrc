{
  "env": {
    "es6": true,
    "browser": true,
    "node": true
  },
  "extends": [
    "airbnb-base",
    "plugin:react/recommended"
  ],
  "settings": {
    "react": {
      "version": "detect"
    }
  },
  "parser": "babel-eslint",
  "parserOptions": {
    "ecmaVersion": 6,
    "sourceType": "module",
    "ecmaFeatures": {
      "jsx": true,
      "modules": true
    },
    "babelOptions": {
      "configFile": "./babel.config.js",
      "classPrivateMethods": true
    }
  },
  "plugins": [
    "babel",
    "react"
  ],
  "rules": {
    "comma-dangle": [
      "error",
      "never"
    ],
    "padded-blocks": [
      "off"
    ],
    "no-trailing-spaces": [
      "error"
    ],
    "no-multi-spaces": [
      "error",
      {
        "ignoreEOLComments": true,
        "exceptions": {
          "Property": true,
          "VariableDeclarator": true
        }
      }
    ],
    "no-param-reassign": [
      "error",
      {
        "props": false
      }
    ],
    "no-underscore-dangle": "off",
    "max-len": [
      "error",
      {
        "code": 100,
        "ignoreTrailingComments": true,
        "ignoreStrings": true,
        "ignoreTemplateLiterals": true,
        "ignoreRegExpLiterals": true
      }
    ],
    "no-use-before-define": "off",
    "brace-style": [
      "error",
      "stroustrup",
      {
        "allowSingleLine": true
      }
    ],
    "object-curly-newline": "off",
    "prefer-promise-reject-errors": "off",
    "no-nested-ternary": "off",
    "prefer-arrow-callback": [
      "error",
      {
        "allowNamedFunctions": true
      }
    ],
    "key-spacing": [
      "error",
      {
        "align": {
          "beforeColon": true,
          "afterColon": true,
          "on": "colon",
          "mode": "minimum"
        }
      }
    ],
    "no-plusplus": "off",
    "camelcase": "off",
    "class-method-use-this": "off",
    "constructor-super": [
      "error"
    ],
    "no-this-before-super": [
      "error"
    ],
    "react/default-props-match-prop-types": [
      "error"
    ],
    "react/destructuring-assignment": [
      "error",
      "always"
    ],
    "react/display-name": [
      "off",
      {
        "ignoreTranspilerName": false
      }
    ],
    "react/no-access-state-in-setstate": [
      "error"
    ],
    "react/no-array-index-key": [
      "error"
    ],
    "react/no-children-prop": [
      "error"
    ],
    "react/no-danger": [
      "error"
    ],
    "react/no-deprecated": [
      "error"
    ],
    "react/no-did-mount-set-state": [
      "error"
    ],
    "react/no-did-update-set-state": [
      "error"
    ],
    "react/no-direct-mutation-state": [
      "error"
    ],
    "react/no-redundant-should-component-update": [
      "error"
    ],
    "react/no-typos": [
      "error"
    ],
    "react/no-string-refs": [
      "error"
    ],
    "react/no-this-in-sfc": [
      "error"
    ],
    "react/no-unescaped-entities": [
      "error"
    ],
    "react/no-unknown-property": [
      "error"
    ],
    "react/no-unsafe": [
      "error"
    ],
    "react/no-unused-prop-types": [
      "error"
    ],
    "react/no-unused-state": [
      "error"
    ],
    "react/prefer-es6-class": [
      "error",
      "always"
    ],
    "react/prefer-stateless-function": [
      "error",
      {
        "ignorePureComponents": true
      }
    ],
    "react/prop-types": [
      "error"
    ],
    "react/react-in-jsx-scope": [
      "error"
    ],
    "react/require-optimization": [
      "error"
    ],
    "react/require-render-return": [
      "error"
    ],
    "react/self-closing-comp": [
      "error",
      {
        "component": true,
        "html": false
      }
    ],
    "react/sort-comp": [
      "off"
    ],
    "react/sort-prop-types": [
      "error"
    ],
    "react/state-in-constructor": [
      "error",
      "never"
    ],
    "react/style-prop-object": [
      "error"
    ],
    "react/void-dom-elements-no-children": [
      "error"
    ],
    "react/jsx-closing-bracket-location": [
      "error",
      "line-aligned"
    ],
    "react/jsx-closing-tag-location": [
      "error"
    ],
    "react/jsx-curly-newline": [
      "error",
      "consistent"
    ],
    "react/jsx-curly-spacing": [
      "error",
      {
        "when": "never"
      }
    ],
    "react/jsx-equals-spacing": [
      "error",
      "never"
    ],
    "react/jsx-first-prop-new-line": [
      "error",
      "multiline-multiprop"
    ],
    "react/jsx-handler-names": [
      "warn"
    ],
    "react/jsx-indent": [
      "error",
      2,
      {
        "indentLogicalExpressions": true
      }
    ],
    "react/jsx-indent-props": [
      "error",
      2
    ],
    "react/jsx-key": [
      "error"
    ],
    "react/jsx-max-props-per-line": [
      "error",
      {
        "maximum": 1,
        "when": "multiline"
      }
    ],
    "react/jsx-no-bind": [
      "error",
      {
        "allowArrowFunctions": true
      }
    ],
    "react/jsx-no-comment-textnodes": [
      "error"
    ],
    "react/jsx-no-duplicate-props": [
      "error"
    ],
    "react/jsx-no-target-blank": [
      "error"
    ],
    "react/jsx-no-undef": [
      "error"
    ],
    "react/jsx-one-expression-per-line": [
      "off",
      {
        "allow": "literal"
      }
    ],
    "react/jsx-pascal-case": [
      "error"
    ],
    "react/jsx-props-no-multi-spaces": [
      "error"
    ],
    "react/jsx-sort-default-props": [
      "error"
    ],
    "react/jsx-sort-props": [
      "error",
      {
        "callbacksLast": true,
        "shorthandFirst": true,
        "noSortAlphabetically": true,
        "reservedFirst": true
      }
    ],
    "react/jsx-tag-spacing": [
      "error",
      {
        "closingSlash": "never",
        "beforeSelfClosing": "always",
        "afterOpening": "never",
        "beforeClosing": "never"
      }
    ],
    "react/jsx-wrap-multilines": [
      "error",
      {
        "declaration": "parens-new-line",
        "assignment": "parens-new-line",
        "return": "parens-new-line",
        "arrow": "parens-new-line",
        "condition": "parens-new-line",
        "logical": "parens-new-line",
        "prop": "parens-new-line"
      }
    ]
  }
}
