{"version":3,"file":"splitFieldProps.js","sources":["../../../src/react/lib/splitFieldProps.ts"],"sourcesContent":["import { AnyObject } from '../generic';\n\nimport { StrictFieldProps } from '../elements/Field';\n\n\nconst fieldPropsKey: ReadonlyArray<keyof StrictFieldProps> = [\n  'actions',\n  'actionsPosition',\n  'clearable',\n  'contentClassName',\n  'contentType',\n  'disabled',\n  'hint',\n  'hintClassName',\n  'icon',\n  'iconPosition',\n  'isDirty',\n  'isFocused',\n  'isTouched',\n  'label',\n  'onClear',\n  'readOnly',\n  'required'\n];\n\n\n// type Rest<P> = Omit<P, Exclude<keyof P, keyof StrictFieldProps>>;\ntype Rest<P> = {\n  [K in keyof P]: K extends keyof StrictFieldProps ? never : P[K]\n};\n\nexport default function splitFieldProps<P extends AnyObject>(\n  props: P\n) {\n\n  const fieldProps: StrictFieldProps = {};\n  const rest = {} as Rest<P>;\n\n  Object.keys(props).forEach((propKey) => {\n    if (fieldPropsKey.includes(propKey as any)) {\n      fieldProps[propKey as keyof StrictFieldProps] = props[propKey];\n    }\n    else {\n      rest[propKey as keyof Rest<P>] = props[propKey];\n    }\n  });\n\n  return [\n    fieldProps,\n    rest\n  ] as const;\n}\n"],"names":[],"mappings":";;AAKA,IAAM,aAAa,GAA0C;IAC3D,SAAS;IACT,iBAAiB;IACjB,WAAW;IACX,kBAAkB;IAClB,aAAa;IACb,UAAU;IACV,MAAM;IACN,eAAe;IACf,MAAM;IACN,cAAc;IACd,SAAS;IACT,WAAW;IACX,WAAW;IACX,OAAO;IACP,SAAS;IACT,UAAU;IACV,UAAU;CACX,CAAC;SAQsB,eAAe,CACrC,KAAQ;IAGR,IAAM,UAAU,GAAqB,EAAE,CAAC;IACxC,IAAM,IAAI,GAAG,EAAa,CAAC;IAE3B,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,OAAO,CAAC,UAAC,OAAO;QACjC,IAAI,aAAa,CAAC,QAAQ,CAAC,OAAc,CAAC,EAAE;YAC1C,UAAU,CAAC,OAAiC,CAAC,GAAG,KAAK,CAAC,OAAO,CAAC,CAAC;SAChE;aACI;YACH,IAAI,CAAC,OAAwB,CAAC,GAAG,KAAK,CAAC,OAAO,CAAC,CAAC;SACjD;KACF,CAAC,CAAC;IAEH,OAAO;QACL,UAAU;QACV,IAAI;KACI,CAAC;AACb;;;;"}