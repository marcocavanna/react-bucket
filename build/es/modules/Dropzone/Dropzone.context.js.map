{"version":3,"file":"Dropzone.context.js","sources":["../../../../src/react/modules/Dropzone/Dropzone.context.ts"],"sourcesContent":["import * as React from 'react';\n\nimport { DropzoneState } from 'react-dropzone';\n\nimport { contextBuilder } from '../../lib';\nimport { DropzoneFile, DropzoneProps } from './Dropzone.types';\n\n\nexport interface DropzoneContext {\n  /** Clear all files */\n  clearFiles: (e?: React.MouseEvent) => void;\n\n  /** Delete a single file */\n  deleteFile: (file: DropzoneFile) => void;\n\n  /** Edit a file */\n  editFile: (file: DropzoneFile) => void;\n\n  /** Current files array */\n  files: DropzoneFile[];\n\n  /** Check if last upload has error */\n  hasUploadError: boolean;\n\n  /** Is dropzone Disabled */\n  isDisabled: boolean;\n\n  /** Check if dropzone is uploading */\n  isUploading: boolean;\n\n  /** All dropzone Props */\n  props: DropzoneProps;\n\n  /** The Dropzone State */\n  state: DropzoneState;\n\n  /** Start upload process */\n  startUpload: (e?: React.MouseEvent) => void;\n}\n\n\nconst {\n  hook    : useDropzone,\n  Provider: DropzoneProvider,\n  Consumer: DropzoneConsumer\n} = contextBuilder<DropzoneContext>();\n\nexport {\n  useDropzone,\n  DropzoneProvider,\n  DropzoneConsumer\n};\n"],"names":[],"mappings":";;;;;;;;;IAyCM,KAIF,cAAc,EAAmB,EAHzB,WAAW,UAAA,EACX,gBAAgB,cAAA;;;;;"}