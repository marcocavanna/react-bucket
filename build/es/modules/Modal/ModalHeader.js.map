{"version":3,"file":"ModalHeader.js","sources":["../../../../src/react/modules/Modal/ModalHeader.tsx"],"sourcesContent":["import * as React from 'react';\nimport clsx from 'clsx';\n\nimport {\n  childrenUtils,\n  createShorthandFactory\n} from '@appbuckets/react-ui-core';\nimport { CreatableFunctionComponent } from '../../generic';\n\nimport {\n  useElementType,\n  useSharedClassName\n} from '../../lib';\n\nimport { ModalHeaderProps } from './ModalHeader.types';\n\nimport { Header } from '../../elements/Header';\n\n\n/* --------\n * Component Declare\n * -------- */\ntype ModalHeaderComponent = CreatableFunctionComponent<ModalHeaderProps>;\n\n\n/* --------\n * Component Render\n * -------- */\nconst ModalHeader: ModalHeaderComponent = (props) => {\n\n  const {\n    className,\n    rest: {\n      children,\n      content,\n      icon,\n      meta,\n      subheader,\n      ...rest\n    }\n  } = useSharedClassName(props);\n\n  /** Get the component element type */\n  const ElementType = useElementType(ModalHeader, props);\n\n  /** Build the element class list */\n  const classes = clsx(\n    'modal-header',\n    className\n  );\n\n  /** Build a memoized Header */\n  const headerElement = React.useMemo(\n    () => Header.create({\n      content,\n      icon,\n      subheader\n    }, { autoGenerateKey: false }),\n    [\n      content,\n      icon,\n      subheader\n    ]\n  );\n\n  const metaElement = React.useMemo(\n    () => meta && (\n      <div className={'modal-meta'}>\n        {meta}\n      </div>\n    ),\n    [ meta ]\n  );\n\n  /** If children are declared, render them */\n  if (!childrenUtils.isNil(children)) {\n    return (\n      <ElementType {...rest} className={classes}>\n        {children}\n      </ElementType>\n    );\n  }\n\n  return (\n    <ElementType {...rest} className={classes}>\n      {headerElement}\n      {metaElement}\n    </ElementType>\n  );\n};\n\nModalHeader.displayName = 'ModalHeader';\n\nModalHeader.create = createShorthandFactory(ModalHeader, (content) => ({ content }));\n\nexport default ModalHeader;\n"],"names":["useSharedClassName","useElementType","clsx","React.useMemo","React.createElement","childrenUtils","createShorthandFactory"],"mappings":";;;;;;;;;;;;;;AAyBA;;;IAGM,WAAW,GAAyB,UAAC,KAAK;IAE9C,IAAM,KAUFA,6BAAkB,CAAC,KAAK,CAAC,EAT3B,SAAS,eAAA,EACT,YAOC,EANC,QAAQ,cAAA,EACR,OAAO,aAAA,EACP,IAAI,UAAA,EACJ,IAAI,UAAA,EACJ,SAAS,eAAA,EACN,IAAI,qBANH,oDAOL,CAC0B,CAAC;;IAG9B,IAAM,WAAW,GAAGC,yBAAc,CAAC,WAAW,EAAE,KAAK,CAAC,CAAC;;IAGvD,IAAM,OAAO,GAAGC,wBAAI,CAClB,cAAc,EACd,SAAS,CACV,CAAC;;IAGF,IAAM,aAAa,GAAGC,aAAa,CACjC,cAAM,OAAA,MAAM,CAAC,MAAM,CAAC;QAClB,OAAO,SAAA;QACP,IAAI,MAAA;QACJ,SAAS,WAAA;KACV,EAAE,EAAE,eAAe,EAAE,KAAK,EAAE,CAAC,GAAA,EAC9B;QACE,OAAO;QACP,IAAI;QACJ,SAAS;KACV,CACF,CAAC;IAEF,IAAM,WAAW,GAAGA,aAAa,CAC/B,cAAM,OAAA,IAAI,KACRC,6BAAK,SAAS,EAAE,YAAY,IACzB,IAAI,CACD,CACP,GAAA,EACD,CAAE,IAAI,CAAE,CACT,CAAC;;IAGF,IAAI,CAACC,yBAAa,CAAC,KAAK,CAAC,QAAQ,CAAC,EAAE;QAClC,QACED,oBAAC,WAAW,sBAAK,IAAI,IAAE,SAAS,EAAE,OAAO,KACtC,QAAQ,CACG,EACd;KACH;IAED,QACEA,oBAAC,WAAW,sBAAK,IAAI,IAAE,SAAS,EAAE,OAAO;QACtC,aAAa;QACb,WAAW,CACA,EACd;AACJ,EAAE;AAEF,WAAW,CAAC,WAAW,GAAG,aAAa,CAAC;AAExC,WAAW,CAAC,MAAM,GAAGE,kCAAsB,CAAC,WAAW,EAAE,UAAC,OAAO,IAAK,QAAC,EAAE,OAAO,SAAA,EAAE,IAAC,CAAC;;;;"}