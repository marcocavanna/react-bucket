{"version":3,"file":"ModalActions.js","sources":["../../../../src/react/modules/Modal/ModalActions.tsx"],"sourcesContent":["import * as React from 'react';\nimport clsx from 'clsx';\n\nimport {\n  childrenUtils, createShorthandFactory\n} from '@appbuckets/react-ui-core';\n\nimport {\n  useElementType,\n  useSharedClassName\n} from '../../lib';\n\nimport { ModalActionsProps } from './ModalActions.types';\n\nimport { Button, ButtonProps } from '../../elements/Button';\nimport { CreatableFunctionComponent, ShorthandCollection } from '../../generic';\n\n\n/* --------\n * Component Declare\n * -------- */\ntype ModalActionsComponent = CreatableFunctionComponent<ModalActionsProps>;\n\n\n/* --------\n * Component Render\n * -------- */\nconst ModalActions: ModalActionsComponent = (props) => {\n\n  const {\n    className,\n    rest: {\n      actions,\n      children,\n      content,\n      onActionClick,\n      ...rest\n    }\n  } = useSharedClassName(props);\n\n  /** Get the component element type */\n  const ElementType = useElementType(ModalActions, props);\n\n  /** Build the element class list */\n  const classes = clsx(\n    'modal-actions',\n    className\n  );\n\n  /** If children are declared, render them */\n  if (!childrenUtils.isNil(children)) {\n    return (\n      <ElementType {...rest} className={classes}>\n        {children}\n      </ElementType>\n    );\n  }\n\n  return (\n    <ElementType {...rest} className={classes}>\n      {Array.isArray(actions) && actions.map(button => (\n        Button.create(button, {\n          autoGenerateKey: false,\n          overrideProps  : (predefinedProps) => ({\n            onClick: (e, buttonProps) => {\n              if (predefinedProps.onClick) {\n                predefinedProps.onClick(e, buttonProps);\n              }\n\n              if (onActionClick) {\n                onActionClick(e, buttonProps);\n              }\n            }\n          })\n        })\n      ))}\n    </ElementType>\n  );\n};\n\nModalActions.displayName = 'ModalActions';\n\nModalActions.create = createShorthandFactory(ModalActions, (value) => ({\n  actions: value as ShorthandCollection<ButtonProps>\n}));\n\nexport default ModalActions;\n"],"names":["useSharedClassName","useElementType","clsx","childrenUtils","React.createElement","createShorthandFactory"],"mappings":";;;;;;;;;;;;;;;AAwBA;;;IAGM,YAAY,GAA0B,UAAC,KAAK;QAE1C,KASFA,6BAAkB,CAAC,KAAK,CAAC,EAR3B,SAAS,eAAA,EACT,YAMC,EALC,OAAO,aAAA,EACP,QAAQ,cAAA,EAER,aAAa,mBAAA,EACV,IAAI,qBALH,mDAML,EAC2B;;IAG9B,IAAM,WAAW,GAAGC,yBAAc,CAAC,YAAY,EAAE,KAAK,CAAC,CAAC;;IAGxD,IAAM,OAAO,GAAGC,wBAAI,CAClB,eAAe,EACf,SAAS,CACV,CAAC;;IAGF,IAAI,CAACC,yBAAa,CAAC,KAAK,CAAC,QAAQ,CAAC,EAAE;QAClC,QACEC,oBAAC,WAAW,sBAAK,IAAI,IAAE,SAAS,EAAE,OAAO,KACtC,QAAQ,CACG,EACd;KACH;IAED,QACEA,oBAAC,WAAW,sBAAK,IAAI,IAAE,SAAS,EAAE,OAAO,KACtC,KAAK,CAAC,OAAO,CAAC,OAAO,CAAC,IAAI,OAAO,CAAC,GAAG,CAAC,UAAA,MAAM,IAAI,QAC/C,MAAM,CAAC,MAAM,CAAC,MAAM,EAAE;QACpB,eAAe,EAAE,KAAK;QACtB,aAAa,EAAI,UAAC,eAAe,IAAK,QAAC;YACrC,OAAO,EAAE,UAAC,CAAC,EAAE,WAAW;gBACtB,IAAI,eAAe,CAAC,OAAO,EAAE;oBAC3B,eAAe,CAAC,OAAO,CAAC,CAAC,EAAE,WAAW,CAAC,CAAC;iBACzC;gBAED,IAAI,aAAa,EAAE;oBACjB,aAAa,CAAC,CAAC,EAAE,WAAW,CAAC,CAAC;iBAC/B;aACF;SACF,IAAC;KACH,CAAC,IACH,CAAC,CACU,EACd;AACJ,EAAE;AAEF,YAAY,CAAC,WAAW,GAAG,cAAc,CAAC;AAE1C,YAAY,CAAC,MAAM,GAAGC,kCAAsB,CAAC,YAAY,EAAE,UAAC,KAAK,IAAK,QAAC;IACrE,OAAO,EAAE,KAAyC;CACnD,IAAC,CAAC;;;;"}