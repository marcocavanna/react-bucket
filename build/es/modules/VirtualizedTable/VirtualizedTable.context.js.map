{"version":3,"file":"VirtualizedTable.context.js","sources":["../../../../src/react/modules/VirtualizedTable/VirtualizedTable.context.ts"],"sourcesContent":["import { RxTableComponents } from '../../collections/RxTable';\nimport { RxTableFactory } from '../../collections/RxTable/RxTable.factory';\n\nimport { contextBuilder } from '../../lib';\n\nimport { AnyObject } from '../../generic';\nimport { VirtualizedTableColumnProps } from './VirtualizedTable.types';\n\n\n/* --------\n * Virtualized Table Context Definition\n * -------- */\nexport interface VirtualizedTableContext<Data extends AnyObject> extends RxTableFactory<Data> {\n  /** All VirtualizedTable Columns */\n  columns: VirtualizedTableColumnProps<Data>[];\n\n  /** Components used to render data */\n  Components: RxTableComponents<Data>;\n\n  /** Effective table width */\n  effectiveWidth: number;\n\n  /** Height of filter row */\n  filterRowHeight: number;\n\n  /** Header row height */\n  headerHeight: number;\n\n  /** Table total height */\n  height: number;\n\n  /** Check if must enable row click */\n  isRowClickEnabled: boolean;\n\n  /** Get the row height using index */\n  getRowHeight: (index: number) => number;\n\n  /** Table total width */\n  width: number;\n}\n\n\nconst {\n  hook    : useVirtualizedTable,\n  Provider: VirtualizedTableProvider,\n  Consumer: VirtualizedTableConsumer\n} = contextBuilder<VirtualizedTableContext<any>>();\n\nexport {\n  useVirtualizedTable,\n  VirtualizedTableProvider,\n  VirtualizedTableConsumer\n};\n"],"names":[],"mappings":";;;;;;;;;IA0CM,KAIF,cAAc,EAAgC,EAHtC,mBAAmB,UAAA,EACnB,wBAAwB,cAAA;;;;;"}