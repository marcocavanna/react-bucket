{"version":3,"file":"FormFormik.js","sources":["../../../../src/react/collections/Form/FormFormik.tsx"],"sourcesContent":["import * as React from 'react';\nimport { Formik, FormikProps } from 'formik';\nimport { Button, ButtonProps } from '../../elements/Button';\n\nimport Form from './Form';\n\nimport { FormFormikActionHandler, FormFormikProps } from './FormFormik.types';\n\n\n/* --------\n * Internal Type used to Describe Internal Component\n * -------- */\ntype FormFormikInternalActionHandler<Values> = (\n  e: React.MouseEvent,\n  buttonProps: ButtonProps,\n  formikBag: FormikProps<Values>\n) => void;\n\ntype FormFormikComponentProps<Values> = Omit<FormFormikProps<Values>, 'onCancel' | 'onSubmit'> & {\n  formikBag: FormikProps<Values>;\n  onCancel?: FormFormikInternalActionHandler<Values>;\n};\n\n\n/* --------\n * Render the Formik Inner Actions\n * -------- */\nfunction FormFormikActions<Values = any>(\n  props: FormFormikComponentProps<Values>\n): React.ReactElement<FormFormikComponentProps<Values>> | null {\n\n  const {\n    formActionWrapper: ActionWrapper,\n    submitButton,\n    cancelButton,\n    onCancel,\n    formikBag\n  } = props;\n\n\n  /* --------\n   * Build Memoized Components\n   * -------- */\n  const submitButtonElement = React.useMemo(\n    () => Button.create(submitButton, {\n      autoGenerateKey: false,\n      defaultProps   : {\n        className: 'submit',\n        primary  : true,\n        loading  : formikBag.isSubmitting\n      },\n      overrideProps  : {\n        disabled: formikBag.isSubmitting,\n        type    : 'submit'\n      }\n    }),\n    [\n      submitButton,\n      formikBag.isSubmitting\n    ]\n  );\n\n  const cancelButtonElement = React.useMemo(\n    () => Button.create(cancelButton, {\n      autoGenerateKey: false,\n      defaultProps   : {\n        className: 'cancel'\n      },\n      overrideProps  : (originalProps => ({\n        disabled: formikBag.isSubmitting,\n        type    : 'button',\n        onClick : (e, buttonProps) => {\n          /** Call Initial onClick handler */\n          if (originalProps.onClick) {\n            originalProps.onClick(e, buttonProps);\n          }\n          /** Call the onCancel form Handler */\n          if (onCancel) {\n            onCancel(e, buttonProps, formikBag);\n          }\n        }\n      }))\n    }),\n    [\n      cancelButton,\n      onCancel,\n      formikBag.isSubmitting\n    ]\n  );\n\n  /** Case of no Action Wrapper, return an empty component */\n  if (!ActionWrapper) {\n    return null;\n  }\n\n  return (\n    <ActionWrapper className={'form-actions'}>\n      {cancelButtonElement}\n      {submitButtonElement}\n    </ActionWrapper>\n  );\n}\n\n\n/* --------\n * Render the Formik Inner Content\n * -------- */\nfunction FormFormikContent<Values = any>(\n  props: FormFormikComponentProps<Values>\n): React.ReactElement<FormFormikComponentProps<Values>> | null {\n\n  const {\n    formContentWrapper: ContentWrapper,\n    children\n  } = props;\n\n  if (!ContentWrapper) {\n    return null;\n  }\n\n  return (\n    <ContentWrapper className={'form-content'}>\n      {children}\n    </ContentWrapper>\n  );\n}\n\n\n/* --------\n * Render the Form Formik Outer Wrapper\n * -------- */\nexport default function FormFormik<Values = any, SubmitResult = any>(\n  props: FormFormikProps<Values, SubmitResult>\n): React.ReactElement<FormFormikProps<Values, SubmitResult>> {\n\n  const {\n    /** Strict FormFormik Props */\n    children,\n    cancelButton,\n    disabled,\n    submitButton,\n    formActionWrapper : ActionWrapper,\n    formContentWrapper: ContentWrapper,\n    onCancel,\n    onSubmit,\n    onSubmitCompleted,\n    onSubmitError,\n    resetOnCancel,\n\n    /** All other formik props */\n    ...formikProps\n  } = props;\n\n\n  /* --------\n   * Component Handlers\n   * -------- */\n  const handleFormSubmit = React.useCallback<FormFormikActionHandler<Values>>(\n    async (values, helpers) => {\n      try {\n        const result = typeof onSubmit === 'function'\n          ? await onSubmit(values, helpers)\n          : undefined;\n\n        helpers.setSubmitting(false);\n\n        if (onSubmitCompleted) {\n          onSubmitCompleted(result, values, helpers);\n        }\n      }\n      catch (error) {\n        helpers.setSubmitting(false);\n\n        /** Call the error handler */\n        if (onSubmitError) {\n          onSubmitError(error, values, helpers);\n        }\n      }\n    },\n    []\n  );\n\n  const handleFormikCancel = React.useCallback<FormFormikInternalActionHandler<Values>>(\n    (e, buttonProps, formikBag) => {\n      /** Check if must reset form on cancel press */\n      if (resetOnCancel) {\n        formikBag.resetForm();\n      }\n      /** Call user defined handlers */\n      if (onCancel) {\n        onCancel(formikBag.values, {\n          setStatus      : formikBag.setStatus,\n          setErrors      : formikBag.setErrors,\n          setSubmitting  : formikBag.setSubmitting,\n          setTouched     : formikBag.setTouched,\n          setValues      : formikBag.setValues,\n          setFieldError  : formikBag.setFieldError,\n          setFieldTouched: formikBag.setFieldTouched,\n          setFieldValue  : formikBag.setFieldValue,\n          validateField  : formikBag.validateField,\n          validateForm   : formikBag.validateForm,\n          resetForm      : formikBag.resetForm,\n          submitForm     : formikBag.submitForm,\n          setFormikState : formikBag.setFormikState\n        });\n      }\n    },\n    [ onCancel ]\n  );\n\n\n  /* --------\n   * Return the Form\n   * -------- */\n  return (\n    <Formik\n      {...formikProps}\n      onSubmit={handleFormSubmit}\n    >\n      {formikBag => (\n        <Form onSubmit={formikBag.handleSubmit}>\n          <FormFormikContent\n            {...props}\n            onCancel={undefined}\n            formikBag={formikBag}\n          />\n\n          <FormFormikActions\n            {...props}\n            onCancel={handleFormikCancel}\n            formikBag={formikBag}\n          />\n        </Form>\n      )}\n    </Formik>\n  );\n}\n\nFormFormik.defaultProps = {\n  formActionWrapper : 'div',\n  formContentWrapper: 'div'\n} as Partial<FormFormikProps<any>>;\n"],"names":["React.useMemo","React.createElement","React.useCallback","Formik"],"mappings":"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"}