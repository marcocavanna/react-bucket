{"version":3,"file":"RxTableHeader.js","sources":["../../../../src/react/collections/RxTable/RxTableHeader.tsx"],"sourcesContent":["import * as React from 'react';\nimport clsx from 'clsx';\n\nimport { Checkbox, CheckboxProps } from '../../elements/Checkbox';\nimport { Input, InputProps } from '../../elements/Input';\nimport { SelectProps } from '../../elements/Select';\n\nimport { useRxTable } from './RxTable.context';\nimport { RxTableFactory } from './RxTable.factory';\nimport { RxTableDataFilter } from './RxTable.types';\nimport { RxTableHeaderTitleColumn } from './RxTableColumns';\n\n\n/* --------\n * Table Filter Row Render\n * -------- */\nexport interface RxTableFilterElementProps {\n  /** The Column Key */\n  columnKey: string;\n\n  /** Filter type */\n  filter?: RxTableDataFilter<unknown>;\n\n  /** All filters */\n  filters: RxTableFactory<any>['filters'];\n\n  /** Set filter function */\n  setFilter: RxTableFactory<any>['setFilter'];\n}\n\nexport const RxTableFilterElement: React.FunctionComponent<RxTableFilterElementProps> = (\n  props\n) => {\n\n  const {\n    columnKey,\n    filter,\n    filters,\n    setFilter\n  } = props;\n\n  /** Build Handlers */\n  const filterValue = filters[columnKey];\n  const handleFilterChange = React.useCallback(\n    (e: any, filterProps?: InputProps | CheckboxProps | SelectProps) => {\n      if (filter) {\n        if (filter.type === 'input') {\n          setFilter(columnKey, filterProps!.value);\n        }\n        else if (filter.type === 'checkbox') {\n          setFilter(columnKey, !filterValue);\n        }\n      }\n    },\n    [\n      setFilter,\n      filter,\n      filterValue,\n      columnKey\n    ]\n  );\n\n  /** If no type, return no filter */\n  if (!filter) {\n    return null;\n  }\n\n  /** Return the right filter */\n  if (filter.type === 'input') {\n    return (\n      <Input\n        icon={'filter'}\n        {...filter.props}\n        value={filters[columnKey]}\n        onChange={handleFilterChange}\n      />\n    );\n  }\n\n  if (filter.type === 'checkbox') {\n    return (\n      <Checkbox\n        {...filter.props}\n        checked={!!filters[columnKey]}\n        onChange={handleFilterChange}\n      />\n    );\n  }\n\n  return null;\n};\n\nconst RxTableFilterRow: React.FunctionComponent = () => {\n\n  const {\n    columns,\n    Components,\n    filters,\n    setFilter\n  } = useRxTable();\n\n  return (\n    <Components.FilterRow>\n      {columns.map((column) => {\n        /** Build className */\n        const classes = clsx(\n          'filter',\n          column.textAlign && `has-text-${column.textAlign}`\n        );\n\n        /** Return the Filter */\n        return (\n          <Components.FilterCell\n            key={column.key}\n            className={classes}\n            column={column}\n          >\n            <RxTableFilterElement\n              columnKey={column.key}\n              filter={column.filter}\n              setFilter={setFilter}\n              filters={filters}\n            />\n          </Components.FilterCell>\n        );\n      })}\n    </Components.FilterRow>\n  );\n\n};\n\n\n/* --------\n * Table Header Render\n * -------- */\nconst RxTableHeaderRow: React.FunctionComponent = () => {\n\n  const {\n    columns,\n    Components,\n    isSortReversed,\n    setSorting,\n    sorting\n  } = useRxTable();\n\n  return (\n    <Components.HeaderRow>\n      {columns.map((column) => (\n        <RxTableHeaderTitleColumn\n          key={column.key}\n          column={column}\n          Component={Components.HeaderCell}\n          isSortReversed={isSortReversed}\n          onSortChange={setSorting}\n          tableSorting={sorting}\n        />\n      ))}\n    </Components.HeaderRow>\n  );\n\n};\n\n\n/* --------\n * Component Definition\n * -------- */\nconst RxTableHeader: React.FunctionComponent = () => {\n\n  const {\n    Components,\n    hasHeaderRow,\n    hasFilterRow\n  } = useRxTable();\n\n  /** If table has no header or filter row, return an empty component */\n  if (!hasFilterRow && !hasHeaderRow) {\n    return null;\n  }\n\n  /** Return wrapped rows */\n  return (\n    <Components.HeaderWrapper>\n      <Components.Header>\n        {hasHeaderRow && <RxTableHeaderRow />}\n        {hasFilterRow && <RxTableFilterRow />}\n      </Components.Header>\n    </Components.HeaderWrapper>\n  );\n};\n\nRxTableHeader.displayName = 'RxTableHeader';\n\nexport { RxTableHeader };\n"],"names":["React.useCallback","React.createElement","useRxTable","clsx","RxTableHeaderTitleColumn"],"mappings":"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"}