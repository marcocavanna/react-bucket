{"version":3,"file":"RxTableBody.js","sources":["../../../../src/react/collections/RxTable/RxTableBody.tsx"],"sourcesContent":["import * as React from 'react';\nimport clsx from 'clsx';\n\nimport { useRxTable } from './RxTable.context';\n\nimport { RxTableCellComponent, RxTableColumnProps } from './RxTable.types';\n\n\n/* --------\n * Single Row Cell Component\n * -------- */\ninterface RxTableBodyCellProps<Data> {\n  className?: string;\n\n  column: RxTableColumnProps<Data>;\n\n  Component: RxTableCellComponent<Data>;\n\n  tableData: Data[];\n\n  index: number;\n\n  row: Data;\n}\n\nexport const RxTableBodyCell: React.FunctionComponent<RxTableBodyCellProps<unknown>> = (\n  props\n) => {\n\n  const {\n    className,\n    Component,\n    column,\n    tableData,\n    index,\n    row\n  } = props;\n\n  const classes = clsx(\n    column.textAlign && `has-text-${column.textAlign}`,\n    column.className,\n    className\n  );\n\n  return (\n    <Component\n      className={classes}\n      column={column}\n      tableData={tableData}\n      index={index}\n      row={row}\n    />\n  );\n\n};\n\n\n/* --------\n * Single Row Component\n * -------- */\nconst RxTableRow: React.FunctionComponent<{ index: number }> = (\n  props\n) => {\n\n  /** Extract index from Props */\n  const { index } = props;\n\n  const {\n    columns,\n    Components,\n    tableData,\n    isRowClickEnabled,\n    handleRowClick: superHandleRowClick\n  } = useRxTable();\n\n  /** Get Row Data */\n  const row = tableData[index];\n\n  /** Build row classes */\n  const classes = clsx({\n    last     : index === tableData.length - 1,\n    first    : index === 0,\n    clickable: isRowClickEnabled\n  });\n\n\n  /* --------\n   * Handlers\n   * -------- */\n  const handleRowClick = React.useCallback(\n    () => {\n      superHandleRowClick(index);\n    },\n    [ superHandleRowClick, index ]\n  );\n\n\n  /* --------\n   * Return the Component\n   * -------- */\n  return (\n    <Components.BodyRow\n      className={classes}\n      columns={columns}\n      index={index}\n      onClick={isRowClickEnabled ? handleRowClick : undefined}\n      row={row}\n    >\n      {columns.map((column) => (\n        <RxTableBodyCell\n          key={column.key}\n          Component={Components.BodyCell}\n          column={column}\n          tableData={tableData}\n          index={index}\n          row={row}\n        />\n      ))}\n    </Components.BodyRow>\n  );\n\n};\n\n\n/* --------\n * Main Component Definition\n * -------- */\nconst RxTableBody: React.FunctionComponent = () => {\n\n  const {\n    columns,\n    Components,\n    error,\n    filters,\n    isLoading,\n    tableData,\n    getRowKey\n  } = useRxTable();\n\n  /** Show the Loader while requesting data */\n  if (isLoading) {\n    return (\n      <Components.BodyWrapper>\n        <Components.Body>\n          <Components.LoaderRow className={'loading-row'}>\n            <Components.LoaderCell colSpan={columns.length} className={'loading-cell'}>\n              <Components.Loader />\n            </Components.LoaderCell>\n          </Components.LoaderRow>\n        </Components.Body>\n      </Components.BodyWrapper>\n    );\n  }\n\n  /** If an error occurred, show dedicated component */\n  if (error) {\n    return (\n      <Components.BodyWrapper>\n        <Components.Body>\n          <Components.ErrorRow className={'error-row'}>\n            <Components.ErrorCell colSpan={columns.length} className={'error-cell'}>\n              <Components.Error error={error} />\n            </Components.ErrorCell>\n          </Components.ErrorRow>\n        </Components.Body>\n      </Components.BodyWrapper>\n    );\n  }\n\n  /** Render no Content */\n  if (!tableData.length) {\n    return (\n      <Components.BodyWrapper>\n        <Components.Body>\n          <Components.NoContentRow className={'no-content-row'}>\n            <Components.NoContentCell colSpan={columns.length} className={'no-content-cell'}>\n              <Components.NoContent filters={filters} />\n            </Components.NoContentCell>\n          </Components.NoContentRow>\n        </Components.Body>\n      </Components.BodyWrapper>\n    );\n  }\n\n  /** Render Data */\n  return (\n    <Components.BodyWrapper>\n      <Components.Body>\n        {tableData.map((row, index) => (\n          <RxTableRow\n            key={getRowKey(row, index, tableData)}\n            index={index}\n          />\n        ))}\n      </Components.Body>\n    </Components.BodyWrapper>\n  );\n};\n\nexport { RxTableBody };\n"],"names":["clsx","React.createElement","useRxTable","React.useCallback"],"mappings":"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"}