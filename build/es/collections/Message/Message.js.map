{"version":3,"file":"Message.js","sources":["../../../../src/react/collections/Message/Message.tsx"],"sourcesContent":["import * as React from 'react';\nimport clsx from 'clsx';\n\nimport {\n  childrenUtils\n} from '@appbuckets/react-ui-core';\n\nimport {\n  useElementType,\n  useSplitStateClassName,\n  useSharedClassName\n} from '../../lib';\n\nimport { MessageProps } from './Message.types';\nimport { Icon } from '../../elements/Icon';\nimport { Header } from '../../elements/Header';\n\n\n/* --------\n * Component Declare\n * -------- */\ntype MessageComponent = React.FunctionComponent<MessageProps>;\n\n\n/* --------\n * Component Render\n * -------- */\nconst Message: MessageComponent = (props) => {\n\n  const {\n    className,\n    rest: {\n      children,\n      content,\n      header,\n      icon,\n      onDismiss,\n      ...rawRest\n    }\n  } = useSharedClassName(props);\n\n  /** Get Proper Element type */\n  const ElementType = useElementType(Message, props);\n\n  /** Split state classNames */\n  const [ stateClassNames, rest ] = useSplitStateClassName(rawRest);\n\n  /** Build class list */\n  const classes = clsx(\n    typeof onDismiss === 'function' && 'dismissible',\n    'message',\n    stateClassNames,\n    className\n  );\n\n\n  /* --------\n   * Component Handlers\n   * -------- */\n  const handleDismiss = (e: React.MouseEvent<HTMLElement>) => {\n    if (typeof onDismiss === 'function') {\n      onDismiss(e, props);\n    }\n  };\n\n\n  /* --------\n   * Internal Elements\n   * -------- */\n  const dismissIcon = typeof onDismiss === 'function' && (\n    <Icon name={'times'} className={'dismiss'} onClick={handleDismiss} />\n  );\n\n  /* --------\n   * Internal Content Generated\n   * -------- */\n  const messageContent = React.useMemo(\n    () => (header || content || icon) && Header.create({\n      content  : header,\n      subheader: content,\n      icon\n    }, { autoGenerateKey: false }),\n    [ header, content, icon ]\n  );\n\n\n  /* --------\n   * If element has children, render them\n   * -------- */\n  if (!childrenUtils.isNil(children)) {\n    return (\n      <ElementType {...rest} className={classes}>\n        {dismissIcon}\n        {children}\n      </ElementType>\n    );\n  }\n\n\n  /* --------\n   * Render the Component\n   * -------- */\n  return (\n    <ElementType {...rest} className={classes}>\n      {dismissIcon}\n      {messageContent}\n    </ElementType>\n  );\n};\n\nMessage.displayName = 'Message';\n\nexport default Message;\n"],"names":["useSharedClassName","useElementType","useSplitStateClassName","clsx","React.createElement","React.useMemo","childrenUtils"],"mappings":";;;;;;;;;;;;;;;AAwBA;;;IAGM,OAAO,GAAqB,UAAC,KAAK;IAEtC,IAAM,KAUFA,6BAAkB,CAAC,KAAK,CAAC,EAT3B,SAAS,eAAA,EACT,YAOC,EANC,QAAQ,cAAA,EACR,OAAO,aAAA,EACP,MAAM,YAAA,EACN,IAAI,UAAA,EACJ,SAAS,eAAA,EACN,OAAO,qBANN,sDAOL,CAC0B,CAAC;;IAG9B,IAAM,WAAW,GAAGC,yBAAc,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC;;IAG7C,IAAA,KAA4BC,iCAAsB,CAAC,OAAO,CAAC,EAAzD,eAAe,QAAA,EAAE,IAAI,QAAoC,CAAC;;IAGlE,IAAM,OAAO,GAAGC,wBAAI,CAClB,OAAO,SAAS,KAAK,UAAU,IAAI,aAAa,EAChD,SAAS,EACT,eAAe,EACf,SAAS,CACV,CAAC;;;;IAMF,IAAM,aAAa,GAAG,UAAC,CAAgC;QACrD,IAAI,OAAO,SAAS,KAAK,UAAU,EAAE;YACnC,SAAS,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC;SACrB;KACF,CAAC;;;;IAMF,IAAM,WAAW,GAAG,OAAO,SAAS,KAAK,UAAU,KACjDC,oBAAC,IAAI,IAAC,IAAI,EAAE,OAAO,EAAE,SAAS,EAAE,SAAS,EAAE,OAAO,EAAE,aAAa,GAAI,CACtE,CAAC;;;;IAKF,IAAM,cAAc,GAAGC,aAAa,CAClC,cAAM,OAAA,CAAC,MAAM,IAAI,OAAO,IAAI,IAAI,KAAK,MAAM,CAAC,MAAM,CAAC;QACjD,OAAO,EAAI,MAAM;QACjB,SAAS,EAAE,OAAO;QAClB,IAAI,MAAA;KACL,EAAE,EAAE,eAAe,EAAE,KAAK,EAAE,CAAC,GAAA,EAC9B,CAAE,MAAM,EAAE,OAAO,EAAE,IAAI,CAAE,CAC1B,CAAC;;;;IAMF,IAAI,CAACC,yBAAa,CAAC,KAAK,CAAC,QAAQ,CAAC,EAAE;QAClC,QACEF,oBAAC,WAAW,sBAAK,IAAI,IAAE,SAAS,EAAE,OAAO;YACtC,WAAW;YACX,QAAQ,CACG,EACd;KACH;;;;IAMD,QACEA,oBAAC,WAAW,sBAAK,IAAI,IAAE,SAAS,EAAE,OAAO;QACtC,WAAW;QACX,cAAc,CACH,EACd;AACJ,EAAE;AAEF,OAAO,CAAC,WAAW,GAAG,SAAS;;;;"}