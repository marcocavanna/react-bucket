{"version":3,"file":"Checkbox.js","sources":["../../../../src/react/elements/Checkbox/Checkbox.tsx"],"sourcesContent":["import * as React from 'react';\nimport clsx from 'clsx';\n\nimport {\n  useElementType,\n  useSharedClassName,\n  useSplitStateClassName\n} from '../../lib';\n\nimport { useAutoControlledValue } from '../../hooks/useAutoControlledValue';\nimport { useTabIndex } from '../../hooks/useTabIndex';\n\nimport { CheckboxProps } from './Checkbox.types';\nimport { Field } from '../Field';\n\n\n/* --------\n * Component Declare\n * -------- */\ntype CheckboxComponent = React.FunctionComponent<CheckboxProps>;\n\n\n/* --------\n * Component Render\n * -------- */\nconst Checkbox: CheckboxComponent = (props) => {\n\n  const {\n    className,\n    rest: {\n      /** Strict Checkbox Props */\n      checked    : checkedProp,\n      defaultChecked,\n      radio,\n      tabIndex   : userDefinedTabIndex,\n      type,\n      onChecked  : handleChecked,\n      onClick    : handleClick,\n      onUnchecked: handleUnchecked,\n      switch     : asSwitch,\n\n      /** Overridden Checkbox Handlers */\n\n      /** Shared Checkbox/Field Props */\n      disabled,\n      required,\n      readOnly,\n\n      /** Strict Field Props */\n      contentClassName,\n      hint,\n      hintClassName,\n      icon,\n      iconPosition,\n      label,\n\n      /** All other Checkbox props */\n      ...rawRest\n    }\n  } = useSharedClassName(props);\n\n  const [ stateClassName, rest ] = useSplitStateClassName(rawRest);\n  const ElementType = useElementType(Checkbox, props);\n\n\n  /* --------\n   * AutoControlled Checked State\n   * -------- */\n  const [ checked, trySetChecked ] = useAutoControlledValue(false, { prop: checkedProp, defaultProp: defaultChecked });\n\n\n  /* --------\n   * Internal Component Ref\n   * -------- */\n  const fieldRef = React.useRef<HTMLDivElement>(null!);\n\n\n  /* --------\n   * Change Field Classes based on State\n   * -------- */\n  React.useEffect(\n    () => {\n      if (!fieldRef.current) {\n        return;\n      }\n\n      if (checked) {\n        fieldRef.current.classList.add('checked');\n      }\n      else {\n        fieldRef.current.classList.remove('checked');\n      }\n    },\n    [ checked, fieldRef ]\n  );\n\n\n  /* --------\n   * Component Classes\n   * -------- */\n  const checkBoxType = radio\n    ? 'radio'\n    : asSwitch ? 'switch' : 'checkbox';\n\n  const classes = clsx(\n    { required, disabled, checked },\n    checkBoxType,\n    stateClassName,\n    className\n  );\n\n\n  /* --------\n   * Internal Checkbox Props\n   * -------- */\n  const canToggle = React.useMemo(\n    () => !disabled && !readOnly && !(radio && checked),\n    [ disabled, readOnly, radio, checked ]\n  );\n\n  const tabIndex = useTabIndex({\n    disabled,\n    readOnly,\n    prop: userDefinedTabIndex\n  });\n\n\n  /* --------\n   * Component Handlers\n   * -------- */\n  const handleLabelClick = (e: React.MouseEvent<HTMLLabelElement>) => {\n    /** If checkbox could not toggle, return */\n    if (!canToggle) {\n      return;\n    }\n\n    /** Build the Handler Params to be reused */\n    const changeHandlerParams: [ React.MouseEvent<HTMLLabelElement>, CheckboxProps ] = [\n      e,\n      { ...props, checked: !checked }\n    ];\n\n    /** Call user defined Handlers */\n    if (handleClick) {\n      handleClick(...changeHandlerParams);\n    }\n\n    if (!checked && handleChecked) {\n      handleChecked(...changeHandlerParams);\n    }\n    else if (checked && handleUnchecked) {\n      handleUnchecked(...changeHandlerParams);\n    }\n\n    /** Try to set the internal auto controlled state */\n    trySetChecked(!checked);\n  };\n\n\n  /* --------\n   * Memoized Component Element\n   * -------- */\n  const labelElement = (\n    <label\n      htmlFor={rest.id}\n      onClick={handleLabelClick}\n    >\n      {label}\n    </label>\n  );\n\n\n  /* --------\n   * Component Render\n   * -------- */\n  return (\n    <Field\n      as={ElementType}\n      ref={fieldRef}\n      disabled={disabled}\n      required={required}\n      contentClassName={contentClassName}\n      hint={hint}\n      hintClassName={hintClassName}\n      icon={icon}\n      iconPosition={iconPosition}\n      readOnly={readOnly}\n      appearance={rawRest.appearance}\n      danger={rawRest.danger}\n      info={rawRest.info}\n      primary={rawRest.primary}\n      secondary={rawRest.secondary}\n      success={rawRest.success}\n      warning={rawRest.warning}\n      contentType={checkBoxType}\n    >\n      <input\n        {...rest}\n        readOnly\n        className={classes}\n        disabled={disabled}\n        checked={checked}\n        tabIndex={tabIndex}\n        type={radio ? 'radio' : 'checkbox'}\n      />\n      {labelElement}\n    </Field>\n  );\n};\n\nexport default Checkbox;\n"],"names":["useSharedClassName","useSplitStateClassName","useElementType","useAutoControlledValue","React.useRef","React.useEffect","clsx","React.useMemo","useTabIndex","React.createElement"],"mappings":"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"}