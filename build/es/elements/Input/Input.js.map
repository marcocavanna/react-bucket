{"version":3,"file":"Input.js","sources":["../../../../src/react/elements/Input/Input.tsx"],"sourcesContent":["import * as React from 'react';\nimport clsx from 'clsx';\n\nimport ReactInputMask from 'react-input-mask';\nimport TextareaAutosize from 'react-textarea-autosize';\n\nimport { useElementType, useSharedClassName, useSplitStateClassName } from '../../lib';\n\nimport { useAutoControlledValue } from '../../hooks/useAutoControlledValue';\nimport { useTabIndex } from '../../hooks/useTabIndex';\n\nimport { Field } from '../Field';\n\nimport { InputProps } from './Input.types';\n\n/* --------\n * Component Declare\n * -------- */\ntype InputComponent = React.FunctionComponent<InputProps>;\n\n/* --------\n * Component Render\n * -------- */\nconst Input: InputComponent = (props) => {\n\n  const {\n    className,\n    rest: {\n      /** Strict Input Props */\n      clearable,\n      currency,\n      masked,\n      textarea,\n      type,\n      tabIndex    : userDefinedTabIndex,\n      selectAllOnClick,\n      value       : userDefinedValue,\n      defaultValue: userDefinedDefaultValue,\n      textareaProps,\n\n      /** Overridden Input Handlers */\n      onClick: userDefinedOnClick,\n      onClear: userDefinedOnClear,\n      onChange: userDefinedOnChange,\n      onBlur: userDefinedOnBlur,\n      onFocus: userDefinedOnFocus,\n\n      /** Shared Input/Field Props */\n      disabled,\n      required,\n      readOnly,\n\n      /** Strict Field Props */\n      actions,\n      actionsPosition,\n      contentClassName,\n      hint,\n      hintClassName,\n      icon,\n      iconPosition,\n      label,\n\n      /** All other input Props */\n      ...rawRest\n    }\n  } = useSharedClassName(props);\n\n  const [ stateClassName, rest ] = useSplitStateClassName(rawRest);\n  const ElementType = useElementType(Input, props);\n\n\n  /* --------\n   * Auto Controlled Component Value\n   * -------- */\n  const [ value, trySetValue ] = useAutoControlledValue('', {\n    prop       : userDefinedValue,\n    defaultProp: userDefinedDefaultValue\n  });\n\n\n  /* --------\n   * Internal Component Ref\n   * -------- */\n  const fieldRef = React.useRef<HTMLDivElement>(null);\n  const inputRef = React.useRef<HTMLInputElement | HTMLTextAreaElement>(null);\n\n\n  /* --------\n   * Component Classes\n   * -------- */\n  const classes = clsx(\n    { required, disabled, clearable },\n    'text',\n    stateClassName,\n    className\n  );\n\n\n  /* --------\n   * Class list Controller\n   * -------- */\n  const addClassesToRef = React.useCallback(\n    (...classesToAdd: string[]) => {\n      classesToAdd.forEach((cx) => {\n        if (fieldRef.current) {\n          fieldRef.current.classList.add(cx);\n        }\n\n        if (inputRef.current) {\n          inputRef.current.classList.add(cx);\n        }\n      });\n    },\n    []\n  );\n\n  const removeClassesFromRef = React.useCallback(\n    (...classesToRemove: string[]) => {\n      classesToRemove.forEach((cx) => {\n        if (fieldRef.current) {\n          fieldRef.current.classList.remove(cx);\n        }\n\n        if (inputRef.current) {\n          inputRef.current.classList.remove(cx);\n        }\n      });\n    },\n    []\n  );\n\n\n  /* --------\n   * Input Handlers\n   * -------- */\n  const handleInputBlur = (e: React.FocusEvent<HTMLInputElement>) => {\n    /** Abort if Disabled or Readonly */\n    if (disabled || readOnly) {\n      return;\n    }\n\n    /** Remove classes from reference */\n    removeClassesFromRef('focused');\n\n    /** Call user defined handler */\n    if (userDefinedOnBlur) {\n      userDefinedOnBlur(e, { ...props, value });\n    }\n  };\n\n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    /** Add class to reference */\n    addClassesToRef('dirty');\n\n\n    /** Call user defined handler */\n    if (userDefinedOnChange) {\n      userDefinedOnChange(e, {\n        ...props,\n        value: e.target.value\n      });\n    }\n\n    /** Try to change local input state value */\n    trySetValue(e.target.value);\n  };\n\n  const handleInputClick = (e: React.MouseEvent<HTMLInputElement>) => {\n    /** Abort if Disabled or Readonly */\n    if (disabled || readOnly) {\n      return;\n    }\n\n    /** Add classes to reference */\n    addClassesToRef('touched');\n\n    if (inputRef.current && selectAllOnClick) {\n      inputRef.current.setSelectionRange(0, inputRef.current.value.length);\n    }\n\n    e.stopPropagation();\n\n    if (userDefinedOnClick) {\n      userDefinedOnClick(e, { ...props, value });\n    }\n  };\n\n  const handleInputFocus = (e: React.FocusEvent<HTMLInputElement>) => {\n    /** Abort if Disabled or Readonly */\n    if (disabled || readOnly) {\n      return;\n    }\n\n    /** Add classes to reference */\n    addClassesToRef('touched', 'focused');\n\n    /** Call user defined handler */\n    if (userDefinedOnFocus) {\n      userDefinedOnFocus(e, { ...props, value });\n    }\n  };\n\n  const handleInputClear = React.useCallback(\n    (e: React.MouseEvent<HTMLElement>) => {\n      /** Manually set the input value, and after trigger the change event */\n      if (inputRef.current) {\n        /** Get the right value setter function from element */\n        const valueSetter = Object.getOwnPropertyDescriptor(inputRef.current, 'value')?.set;\n        const prototype = Object.getPrototypeOf(inputRef.current);\n        const prototypeValueSetter = Object.getOwnPropertyDescriptor(prototype, 'value')?.set;\n\n        /** Create the Event */\n        const event = new Event('input', { bubbles: true });\n        (event as any).simulated = true;\n\n        /** Call the Value Setter Function */\n        if (valueSetter !== prototypeValueSetter && prototypeValueSetter) {\n          prototypeValueSetter.call(inputRef.current, '');\n        }\n        else if (valueSetter) {\n          valueSetter.call(inputRef.current, '');\n        }\n\n        /** Dispatch the event */\n        inputRef.current.dispatchEvent(event);\n\n        /** Call user defined handler */\n        if (userDefinedOnClear) {\n          userDefinedOnClear(e);\n        }\n\n        /** Focus the input element */\n        inputRef.current.focus();\n      }\n    },\n    [ userDefinedOnClear ]\n  );\n\n  /* --------\n   * Input Computed Properties\n   * -------- */\n  const tabIndex = useTabIndex({\n    disabled,\n    readOnly,\n    prop: userDefinedTabIndex\n  });\n\n\n  /* --------\n   * Input Render\n   * -------- */\n  const renderInputElement = () => {\n    const baseProps: any = {\n      value,\n      disabled,\n      required,\n      tabIndex,\n      readOnly,\n      className   : classes,\n      autoComplete: 'off',\n      type        : type || 'text',\n      onBlur      : handleInputBlur,\n      onChange    : handleInputChange,\n      onClick     : handleInputClick,\n      onFocus     : handleInputFocus\n    };\n\n    if (currency) {\n      return null;\n    }\n\n    if (masked) {\n      return (\n        <ReactInputMask\n          {...baseProps}\n          {...masked}\n        >\n          {(inputProps: any) => (\n            <input\n              {...inputProps}\n              {...rest}\n              ref={inputRef as React.RefObject<HTMLInputElement>}\n              {...baseProps}\n            />\n          )}\n        </ReactInputMask>\n      );\n    }\n\n    if (textarea) {\n      return (\n        <TextareaAutosize\n          {...rest}\n          inputRef={inputRef as React.RefObject<HTMLTextAreaElement>}\n          {...textareaProps}\n          {...baseProps}\n        />\n      );\n    }\n\n    return (\n      <input\n        {...rest}\n        ref={inputRef as React.RefObject<HTMLInputElement>}\n        {...baseProps}\n      />\n    );\n  };\n\n\n  /* --------\n   * Component Render\n   * -------- */\n  return (\n    <Field\n      as={ElementType}\n      ref={fieldRef}\n      disabled={disabled}\n      required={required}\n      actions={actions}\n      actionsPosition={actionsPosition}\n      contentClassName={contentClassName}\n      hint={hint}\n      hintClassName={hintClassName}\n      icon={icon}\n      iconPosition={iconPosition}\n      label={label}\n      readOnly={readOnly}\n      clearable={clearable}\n      onClear={handleInputClear}\n      appearance={rawRest.appearance}\n      danger={rawRest.danger}\n      info={rawRest.info}\n      primary={rawRest.primary}\n      secondary={rawRest.secondary}\n      success={rawRest.success}\n      warning={rawRest.warning}\n      contentType={'input'}\n    >\n      {renderInputElement()}\n    </Field>\n  );\n};\n\nInput.displayName = 'Input';\n\nInput.defaultProps = {\n  textareaProps: {\n    minRows: 2,\n    maxRows: 8\n  },\n  type         : 'text'\n};\n\nexport default Input;\n"],"names":["useSharedClassName","useSplitStateClassName","useElementType","useAutoControlledValue","React.useRef","clsx","React.useCallback","useTabIndex","React.createElement","ReactInputMask","TextareaAutosize"],"mappings":"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"}