{"version":3,"file":"Icon.js","sources":["../../../../src/react/elements/Icon/Icon.tsx"],"sourcesContent":["import * as React from 'react';\nimport clsx from 'clsx';\n\nimport {\n  classByPattern,\n  createShorthandFactory\n} from '@appbuckets/react-ui-core';\n\nimport { CreatableFunctionComponent, FontAwesomeIcon } from '../../generic';\n\nimport {\n  useFontawesomeIcon,\n  useElementType,\n  useSharedClassName,\n  useSplitStateClassName\n} from '../../lib';\n\nimport { IconProps } from './Icon.types';\n\n\n/* --------\n * Component Declare\n * -------- */\ntype IconComponent = CreatableFunctionComponent<IconProps>;\n\n\n/* --------\n * Component Render\n * -------- */\nconst Icon: IconComponent = (props) => {\n\n  const {\n    className,\n    rest: {\n      bordered,\n      disabled,\n      fitted,\n      flip,\n      iconStyle,\n      name,\n      onClick,\n      rotate,\n      solid,\n      spin,\n      unspaced,\n      ...rawRest\n    }\n  } = useSharedClassName(props);\n\n  /** Get Component Element Type */\n  const ElementType = useElementType(Icon, props);\n\n  /** Split state className from rest props */\n  const [ stateClasses, rest ] = useSplitStateClassName(rawRest);\n\n  /** Handle click, to disabled it if is disabled */\n  const handleClick = (e: React.MouseEvent<HTMLElement>) => {\n    /** If icon has been disabled, prevent click */\n    if (disabled) {\n      e.preventDefault();\n      return;\n    }\n    /** If the onClick function exists, invoke it */\n    if (typeof onClick === 'function') {\n      onClick(e, props);\n    }\n  };\n\n  /** Get the FontAwesome Icon */\n  const iconClassName = useFontawesomeIcon(name, iconStyle);\n\n  /** Build icon ClassName */\n  const classes = clsx(\n    'icon',\n    stateClasses,\n    className,\n    iconClassName,\n    solid,\n    {\n      bordered,\n      disabled,\n      fitted,\n      unspaced,\n      clickable: onClick,\n      'fa-spin': spin\n    },\n    classByPattern(flip, 'fa-flip-%value%'),\n    classByPattern(rotate, 'fa-rotate-%value%')\n  );\n\n  /** Draw the element */\n  return (\n    <ElementType\n      {...rest}\n      className={classes}\n      onClick={handleClick}\n    />\n  );\n};\n\nIcon.displayName = 'Icon';\n\n/** Set icon default props */\nIcon.defaultProps = {\n  as: 'i' as React.ElementType\n};\n\n/** Icon could be created using a Shorthand */\nIcon.create = createShorthandFactory(Icon, (name) => ({ name: name as FontAwesomeIcon }));\n\nexport default Icon;\n"],"names":["useSharedClassName","useElementType","useSplitStateClassName","useFontawesomeIcon","clsx","classByPattern","React.createElement","createShorthandFactory"],"mappings":";;;;;;;;;;;;;AA0BA;;;IAGM,IAAI,GAAkB,UAAC,KAAK;IAEhC,IAAM,KAgBFA,6BAAkB,CAAC,KAAK,CAAC,EAf3B,SAAS,eAAA,EACT,YAaC,EAZC,QAAQ,cAAA,EACR,QAAQ,cAAA,EACR,MAAM,YAAA,EACN,IAAI,UAAA,EACJ,SAAS,eAAA,EACT,IAAI,UAAA,EACJ,OAAO,aAAA,EACP,MAAM,YAAA,EACN,KAAK,WAAA,EACL,IAAI,UAAA,EACJ,QAAQ,cAAA,EACL,OAAO,qBAZN,iHAaL,CAC0B,CAAC;;IAG9B,IAAM,WAAW,GAAGC,yBAAc,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;;IAG1C,IAAA,KAAyBC,iCAAsB,CAAC,OAAO,CAAC,EAAtD,YAAY,QAAA,EAAE,IAAI,QAAoC,CAAC;;IAG/D,IAAM,WAAW,GAAG,UAAC,CAAgC;;QAEnD,IAAI,QAAQ,EAAE;YACZ,CAAC,CAAC,cAAc,EAAE,CAAC;YACnB,OAAO;SACR;;QAED,IAAI,OAAO,OAAO,KAAK,UAAU,EAAE;YACjC,OAAO,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC;SACnB;KACF,CAAC;;IAGF,IAAM,aAAa,GAAGC,6BAAkB,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC;;IAG1D,IAAM,OAAO,GAAGC,wBAAI,CAClB,MAAM,EACN,YAAY,EACZ,SAAS,EACT,aAAa,EACb,KAAK,EACL;QACE,QAAQ,UAAA;QACR,QAAQ,UAAA;QACR,MAAM,QAAA;QACN,QAAQ,UAAA;QACR,SAAS,EAAE,OAAO;QAClB,SAAS,EAAE,IAAI;KAChB,EACDC,0BAAc,CAAC,IAAI,EAAE,iBAAiB,CAAC,EACvCA,0BAAc,CAAC,MAAM,EAAE,mBAAmB,CAAC,CAC5C,CAAC;;IAGF,QACEC,oBAAC,WAAW,sBACN,IAAI,IACR,SAAS,EAAE,OAAO,EAClB,OAAO,EAAE,WAAW,IACpB,EACF;AACJ,EAAE;AAEF,IAAI,CAAC,WAAW,GAAG,MAAM,CAAC;AAE1B;AACA,IAAI,CAAC,YAAY,GAAG;IAClB,EAAE,EAAE,GAAwB;CAC7B,CAAC;AAEF;AACA,IAAI,CAAC,MAAM,GAAGC,kCAAsB,CAAC,IAAI,EAAE,UAAC,IAAI,IAAK,QAAC,EAAE,IAAI,EAAE,IAAuB,EAAE,IAAC,CAAC;;;;"}