{"version":3,"file":"Select.js","sources":["../../../../src/react/elements/Select/Select.tsx"],"sourcesContent":["import { MutableRefObject } from 'react';\nimport * as React from 'react';\nimport clsx from 'clsx';\n\nimport ReactSelect, {\n  ActionMeta,\n  Props as ReactSelectProps,\n  ValueType\n} from 'react-select';\n\nimport CreatableReactSelect, {\n  Props as CreatableReactSelectProps\n} from 'react-select/creatable';\n\nimport {\n  createShorthandFactory\n} from '@appbuckets/react-ui-core';\n\nimport { CreatableFunctionComponent } from '../../generic';\n\nimport {\n  useSharedClassName,\n  useSplitStateClassName,\n  splitFieldProps\n} from '../../lib';\n\nimport { useAutoControlledValue } from '../../hooks/useAutoControlledValue';\n\nimport { Field } from '../Field';\n\nimport { SelectOption, SelectDefaultOption, SelectProps } from './Select.types';\n\n\n/* --------\n * Component Declare\n * -------- */\nexport type SelectComponent<Option extends SelectOption = SelectDefaultOption> =\n  CreatableFunctionComponent<SelectProps<Option>>;\n\nexport type MutableReactSelect<Option> = ReactSelect<Option> | CreatableReactSelect<Option>;\ntype MutableReactSelectProps<Option> = ReactSelectProps<Option> | CreatableReactSelectProps<Option>;\n\n\n/* --------\n * Component Render\n * -------- */\nconst SelectRender: React.ForwardRefRenderFunction<MutableReactSelect<SelectDefaultOption>, SelectProps> = (\n  <Option extends SelectOption = SelectDefaultOption>(\n    props: React.PropsWithChildren<SelectProps<Option>>,\n    ref: ((instance: MutableReactSelect<Option> | null) => void) | MutableRefObject<MutableReactSelect<Option> | null> | null\n  ) => {\n\n    /** Split props from className */\n    const {\n      className,\n      rest: {\n        /** Strict Select Component Props */\n        creatable,\n        getOptionValue: userDefinedGetOptionValue,\n        loading,\n        tabIndex      : userDefinedTabIndex,\n\n        /** Select Event Handler */\n        onBlur: userDefinedOnBlur,\n        onChange: userDefinedOnChange,\n        onFocus: userDefinedOnFocus,\n        onInputChange: userDefinedOnInputChange,\n        onMenuClose: userDefinedOnMenuClose,\n        onMenuOpen: userDefinedOnMenuOpen,\n        onMenuScrollToBottom: userDefinedOnMenuScrollToBottom,\n        onMenuScrollToTop: userDefinedOnMenuScrollToTop,\n\n        /** React Select Props */\n        inputValue: userDefinedInputValue,\n        defaultInputValue: userDefinedDefaultInputValue,\n        value: userDefinedValue,\n        defaultValue: userDefinedDefaultValue,\n\n        /** All other props */\n        ...rawRest\n      }\n    } = useSharedClassName(props);\n\n\n    // ----\n    // Split Props\n    // ----\n    const [ stateClasses, compoundProps ] = useSplitStateClassName(rawRest);\n    const [ fieldProps, rest ] = splitFieldProps(compoundProps);\n\n\n    // ----\n    // Define Internal State and Variables\n    // ----\n    const [ inputValue, trySetInputValue ] = useAutoControlledValue('', {\n      prop       : userDefinedInputValue,\n      defaultProp: userDefinedDefaultInputValue\n    });\n\n    const [ value, trySetValue ] = useAutoControlledValue(null, {\n      prop       : userDefinedValue,\n      defaultProp: userDefinedDefaultValue\n    });\n\n    const fieldRef = React.useRef<HTMLDivElement>(null);\n    const selectRef = React.useRef<MutableReactSelect<Option>>(null);\n\n    React.useLayoutEffect(\n      () => {\n        if (typeof ref === 'function') {\n          ref(selectRef.current);\n        }\n        else if (ref) {\n          ref.current = selectRef.current;\n        }\n      },\n      [ ref ]\n    );\n\n\n    // ----\n    // Define the Element and its computed props\n    // ----\n    const ElementType: React.ElementType<MutableReactSelectProps<Option>> = creatable\n      ? CreatableReactSelect\n      : ReactSelect;\n\n    const tabIndex = React.useMemo<string | undefined>(\n      () => {\n        if (fieldProps.disabled || fieldProps.readOnly) {\n          return '-1';\n        }\n\n        if (userDefinedTabIndex !== undefined && userDefinedTabIndex !== null) {\n          return userDefinedTabIndex.toString();\n        }\n\n        return undefined;\n      },\n      [\n        fieldProps.disabled,\n        fieldProps.readOnly,\n        userDefinedTabIndex\n      ]\n    );\n\n    const classes = clsx(\n      {\n        required   : fieldProps.required,\n        'read-only': fieldProps.readOnly,\n        disabled   : fieldProps.disabled\n      },\n      'react-select',\n      stateClasses,\n      className\n    );\n\n\n    // ----\n    // Get the Current Select Value using its ref\n    // ----\n    const getOptionValue = React.useCallback(\n      (option: Option) => {\n        /** If function has not be defined, return as is */\n        if (!userDefinedGetOptionValue) {\n          return (option?.value as string) ?? '';\n        }\n\n        const optionValue = userDefinedGetOptionValue(option);\n\n        if (optionValue === undefined || optionValue === null) {\n          return '';\n        }\n\n        if (typeof optionValue !== 'string') {\n          return optionValue.toString();\n        }\n\n        return optionValue;\n      },\n      [ userDefinedGetOptionValue ]\n    );\n\n    const getSelectedValue: any = () => {\n      /** Get the Select State */\n      const { state } = (selectRef.current ?? {});\n\n      if (!state) {\n        return props.isMulti ? [] : null;\n      }\n\n      const { value: selectedValue } = state as { value: Option | Option[] | null | undefined };\n\n      if (props.isMulti) {\n        return selectedValue ?? [];\n      }\n\n      return selectedValue ?? null;\n    };\n\n\n    // ----\n    // Component Handlers\n    // ----\n    const handleSelectBlur = (e: React.FocusEvent<HTMLElement>) => {\n      /** Abort if Disabled or ReadOnly */\n      if (fieldProps.disabled || fieldProps.readOnly) {\n        return;\n      }\n\n      /** Remove focused class from field */\n      fieldRef.current?.classList.remove('focused');\n\n      /** Get the selected value */\n      if (userDefinedOnBlur) {\n        userDefinedOnBlur(e, {\n          ...props,\n          inputValue,\n          value : getSelectedValue(),\n          action: null\n        });\n      }\n    };\n\n    const handleSelectChange = (selectedValue: ValueType<Option>, action: ActionMeta<Option>) => {\n      /** Set field as Dirty */\n      fieldRef.current?.classList.add('dirty');\n\n      if (userDefinedOnChange) {\n        userDefinedOnChange(null, {\n          ...props,\n          action,\n          inputValue,\n          value: (selectedValue as Option) ?? (props.isMulti ? [] : null)\n        });\n      }\n\n      trySetValue(selectedValue as Option);\n    };\n\n    const handleSelectFocus = (e: React.FocusEvent<HTMLElement>) => {\n      /** Abort if Disabled or ReadOnly */\n      if (fieldProps.disabled || fieldProps.readOnly) {\n        return;\n      }\n\n      /** Remove focused class from field */\n      fieldRef.current?.classList.add('focused');\n      fieldRef.current?.classList.add('touched');\n\n      /** Get the selected value */\n      if (userDefinedOnFocus) {\n        userDefinedOnFocus(e, {\n          ...props,\n          inputValue,\n          value : getSelectedValue(),\n          action: null\n        });\n      }\n    };\n\n    const handleInputChange = (newInputValue: string) => {\n      if (userDefinedOnInputChange) {\n        userDefinedOnInputChange(null, {\n          ...props,\n          inputValue: newInputValue,\n          value     : getSelectedValue(),\n          action    : null\n        });\n      }\n\n      trySetInputValue(newInputValue);\n    };\n\n    const handleMenuOpen = () => {\n      if (userDefinedOnMenuOpen) {\n        userDefinedOnMenuOpen(null, {\n          ...props,\n          inputValue,\n          value : getSelectedValue(),\n          action: null\n        });\n      }\n    };\n\n    const handleMenuClose = () => {\n      if (userDefinedOnMenuClose) {\n        userDefinedOnMenuClose(null, {\n          ...props,\n          inputValue,\n          value : getSelectedValue(),\n          action: null\n        });\n      }\n    };\n\n    const handleMenuScrollToBottom = (e: React.SyntheticEvent<HTMLElement>) => {\n      if (userDefinedOnMenuScrollToBottom) {\n        userDefinedOnMenuScrollToBottom(e, {\n          ...props,\n          inputValue,\n          value : getSelectedValue(),\n          action: null\n        });\n      }\n    };\n\n    const handleMenuScrollToTop = (e: React.SyntheticEvent<HTMLElement>) => {\n      if (userDefinedOnMenuScrollToTop) {\n        userDefinedOnMenuScrollToTop(e, {\n          ...props,\n          inputValue,\n          value : getSelectedValue(),\n          action: null\n        });\n      }\n    };\n\n\n    // ----\n    // Render the Component\n    // ----\n    return (\n      <Field\n        ref={fieldRef}\n        {...fieldProps}\n        appearance={rawRest.appearance}\n        danger={rawRest.danger}\n        info={rawRest.info}\n        primary={rawRest.primary}\n        secondary={rawRest.secondary}\n        success={rawRest.success}\n        warning={rawRest.warning}\n        contentType={'select input'}\n      >\n        <ElementType\n          {...rest}\n          ref={ref}\n          className={classes}\n          classNamePrefix={' '}\n          getOptionValue={getOptionValue}\n          isDisabled={fieldProps.disabled}\n          isLoading={loading}\n          tabIndex={tabIndex}\n          inputValue={inputValue}\n          value={value}\n          onBlur={handleSelectBlur}\n          onChange={handleSelectChange}\n          onFocus={handleSelectFocus}\n          onMenuClose={handleMenuClose}\n          onMenuOpen={handleMenuOpen}\n          onMenuScrollToBottom={handleMenuScrollToBottom}\n          onMenuScrollToTop={handleMenuScrollToTop}\n          onInputChange={handleInputChange}\n        />\n      </Field>\n    );\n  }\n);\n\nconst Select: <Option extends SelectOption = SelectDefaultOption>(\n  props: React.PropsWithChildren<SelectProps<Option>>\n) => (React.ReactElement<Option> | null) = (\n  React.forwardRef(SelectRender) as (...args: any[]) => React.ReactElement\n);\n\n(Select as SelectComponent).displayName = 'Select';\n\n(Select as SelectComponent).defaultProps = {};\n\n(Select as SelectComponent).create = createShorthandFactory<SelectProps>(Select, (options) => ({\n  options: options as SelectDefaultOption[]\n}));\n\nexport default Select;\n"],"names":["useSharedClassName","useSplitStateClassName","useAutoControlledValue","React.useRef","React.useLayoutEffect","CreatableReactSelect","ReactSelect","React.useMemo","clsx","React.useCallback","React.createElement","React.forwardRef","createShorthandFactory"],"mappings":"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"}